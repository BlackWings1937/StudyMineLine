{"objectClass":"NSDictionary","root":{"objectClass":"MindNode","ID":"214IE","rootPoint":{"objectClass":"CGPoint","x":314.8,"y":425},"lineColorHex":"#BBBBBB","children":{"0":{"objectClass":"MindNode","ID":"06647","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"78F42","lineColorHex":"#BF58F5","text":"Node.js能解决什么问题？","remark":"    老式的服务端实现语言(Java PHP ASP.Net)需要为每一个客户端连接创建一个新的线程。同时每一个线程大概需要消耗2MB的内存。所以在内存为8gb的服务器上可以同时连接的用户数目在4000个左右。\n    因为一台服务器最大支持的用户数目有限，所以需要部署多台服务器，但是多台服务器又需要共享一份资源，因此问题就变得复杂了。\n\n    Node.js不为新连接创建线程，而是为每一个客户端连接触发一个在node.js内部的事件。因此可以同时处理几万个用户的客户端连接。    \n    当web应用程序能够支持大量用户并发连接的时候我们应该考虑Node.js"},"1":{"objectClass":"MindNode","ID":"1086O","lineColorHex":"#DC306C","text":"如何实现高性能服务器？"},"objectClass":"NSArray"},"text":"Node.js 概述"},"objectClass":"NSArray"},"text":"Node.js学习"}}